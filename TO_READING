//Вся nodejs работает Асинхронно, поэтому в моём проекте я создал некую функцию контейнер ‘index’, асинхронную конечно, которая запускает все мои остальные функции последовательно, сделал я это для того чтобы сначало спарсить данные потом записать их в файл. Про асинхронность можно прочитать а данной документации https://metanit.com/web/nodejs/2.7.php. или так же можно посмотреть данное видео
https://www.youtube.com/watch?v=lgmgY6hx12g&ab_channel=JAVA%D0%98S%D0%9A%D0%A0%D0%98%D0%9F%D0%A2%D0%AB

Так же в видео ниже можно ознакомиться со стрелочными функциями.
https://www.youtube.com/watch?v=wJCkppMnY2w&t=280s&ab_channel=WebDev%D1%81%D0%BD%D1%83%D0%BB%D1%8F.%D0%9A%D0%B0%D0%BD%D0%B0%D0%BB%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%9B%D1%83%D1%89%D0%B5%D0%BD%D0%BA%D0%BE

Как работает данный проект:
1) Начнём с файла app.js (точка запуска приложения)
После того как я вписываю команду в консоли "node app.json", подключается модуль: const start_parser = require('./parser/index');,
далее собирается конфиг "const config" который мы заранее подготовили для конкретного сайта, и исполняется метод "start_parser.index(config)".

2)После того как мы передали "const config" в функцию index , мы переходим к файлу index.js.
В этом файле я подключаю свой модуль(класс) "const Page = require('./class/class_page');" этот класс будет основным в парсинге так у него есть асинхронный метод "async datapage(url,args)" данный метод принемает урл сайта который мы будем подвергать грязному парсингу, а так же массив args в него мы передаём наш "const config". Более подробно метод и его пункты описаны в коде.Данный метод так же модифицируется под каждый сайт понятное дело.

3) Рекомендую ознакомиться с файлами(порядок):
3.1 ---> app.js
3.2 ---> class_page.js
3.3 ---> index.js
